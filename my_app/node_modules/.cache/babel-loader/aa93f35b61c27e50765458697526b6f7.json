{"ast":null,"code":"const FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.count\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const follow = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport default usersReducer;","map":{"version":3,"sources":["D:/it-kama/my_app/src/redux/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","state","action","type","map","u","id","userId","followed","count","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching"],"mappings":"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","sourcesContent":["const FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\n\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true};\n                    }\n                    return u;\n                }),\n            };\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false};\n                    }\n                    return u;\n                }),\n            };\n\n        case SET_USERS: {\n            return {\n                ...state,\n                users: action.users,\n            };\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage};\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count};\n\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching};\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport const follow = (userId) => ({type: FOLLOW, userId});\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsers = (users) => ({type: SET_USERS, users});\nexport const setCurrentPage = (currentPage) => ({\n    type: SET_CURRENT_PAGE,\n    currentPage,\n});\nexport const setTotalUsersCount = (totalUsersCount) => ({\n    type: SET_TOTAL_USERS_COUNT,\n    count: totalUsersCount,\n});\nexport const toggleIsFetching = (isFetching) => ({\n    type: TOGGLE_IS_FETCHING,\n    isFetching,\n});\n\nexport default usersReducer;\n"]},"metadata":{},"sourceType":"module"}