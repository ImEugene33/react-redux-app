{"ast":null,"code":"var _jsxFileName = \"D:\\\\it-kama\\\\my_app\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from \"react\";\nimport style from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { sendMessageCreator, updateNewMessageBodyCreator } from \"../../redux/dialog-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  let state = props.messagesPage; // проходим мапом по массиву из объектов. метод мап вызывается для каждого объекта в массиве\n\n  let dialogsElements = state.dialogsData.map(dialog => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: dialog.name,\n    id: dialog.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this));\n  let messagesElements = state.messagesData.map(t => /*#__PURE__*/_jsxDEV(Message, {\n    text: t.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this));\n  let newMessageBody = state.newMessageBody;\n\n  let onMessageClick = () => {\n    props.sendMessage();\n  };\n\n  let onNewMessageChange = evt => {\n    let body = evt.target.value;\n    props.updateNewMessageBody(body);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.dialogsItem,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: messagesElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: onNewMessageChange,\n            value: newMessageBody,\n            placeholder: \"enter your massage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onMessageClick,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["D:/it-kama/my_app/src/components/Dialogs/Dialogs.jsx"],"names":["React","style","DialogItem","Message","sendMessageCreator","updateNewMessageBodyCreator","Dialogs","props","state","messagesPage","dialogsElements","dialogsData","map","dialog","name","id","messagesElements","messagesData","t","message","newMessageBody","onMessageClick","sendMessage","onNewMessageChange","evt","body","target","value","updateNewMessageBody","dialogs","dialogsItem","messages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SACEC,kBADF,EAEEC,2BAFF,QAGO,4BAHP;;;AAKA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,MAAIC,KAAK,GAAGD,KAAK,CAACE,YAAlB,CADyB,CAGzB;;AACA,MAAIC,eAAe,GAAGF,KAAK,CAACG,WAAN,CAAkBC,GAAlB,CAAuBC,MAAD,iBAC1C,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,MAAM,CAACC,IAAzB;AAA+B,IAAA,EAAE,EAAED,MAAM,CAACE;AAA1C;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAGA,MAAIC,gBAAgB,GAAGR,KAAK,CAACS,YAAN,CAAmBL,GAAnB,CAAwBM,CAAD,iBAC5C,QAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,CAAC,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA,UADqB,CAAvB;AAGA,MAAIC,cAAc,GAAGZ,KAAK,CAACY,cAA3B;;AAEA,MAAIC,cAAc,GAAG,MAAM;AACzBd,IAAAA,KAAK,CAACe,WAAN;AACD,GAFD;;AAIA,MAAIC,kBAAkB,GAAIC,GAAD,IAAS;AAChC,QAAIC,IAAI,GAAGD,GAAG,CAACE,MAAJ,CAAWC,KAAtB;AACApB,IAAAA,KAAK,CAACqB,oBAAN,CAA2BH,IAA3B;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAExB,KAAK,CAAC4B,OAAtB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAE5B,KAAK,CAAC6B,WAAtB;AAAA,gBAAoCpB;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAET,KAAK,CAAC8B,QAAtB;AAAA,8BACE;AAAA,kBAAMf;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAA,iCACE;AACE,YAAA,QAAQ,EAAEO,kBADZ;AAEE,YAAA,KAAK,EAAEH,cAFT;AAGE,YAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA,iCACE;AAAQ,YAAA,OAAO,EAAEC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAzCD;;KAAMf,O;AA2CN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport style from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {\n  sendMessageCreator,\n  updateNewMessageBodyCreator,\n} from \"../../redux/dialog-reducer\";\n\nconst Dialogs = (props) => {\n  let state = props.messagesPage;\n\n  // проходим мапом по массиву из объектов. метод мап вызывается для каждого объекта в массиве\n  let dialogsElements = state.dialogsData.map((dialog) => (\n    <DialogItem name={dialog.name} id={dialog.id} />\n  ));\n  let messagesElements = state.messagesData.map((t) => (\n    <Message text={t.message} />\n  ));\n  let newMessageBody = state.newMessageBody;\n\n  let onMessageClick = () => {\n    props.sendMessage();\n  };\n\n  let onNewMessageChange = (evt) => {\n    let body = evt.target.value;\n    props.updateNewMessageBody(body);\n  };\n\n  return (\n    <div className={style.dialogs}>\n      <div className={style.dialogsItem}>{dialogsElements}</div>\n      <div className={style.messages}>\n        <div>{messagesElements}</div>\n        <div>\n          <div>\n            <textarea\n              onChange={onNewMessageChange}\n              value={newMessageBody}\n              placeholder=\"enter your massage\"\n            ></textarea>\n          </div>\n          <div>\n            <button onClick={onMessageClick}>Send</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n"]},"metadata":{},"sourceType":"module"}